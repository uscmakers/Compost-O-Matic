
#include <DS18B20.h>
const int TEMPERATURE = A4;
const int SOIL = A0;

const int AirValue = 3670;   // our definition of air value
const int WaterValue = 800;  // our definition of water value
DS18B20 temp_sensor(TEMPERATURE, true); // initialize temperature probe
 SystemSleepConfiguration config;

float fahrenheit;
float soilMoisturePercent;


void setup() {
  pinMode(TEMPERATURE, INPUT);
  pinMode(SOIL, INPUT);
  Serial.begin(9600);
  config.mode(SystemSleepMode::ULTRA_LOW_POWER)
    .gpio(D2, FALLING)
    .duration(1min);
}

void loop() {
  getTemp();
  delay(1000);
  getSoil();
  delay(1000);
  publishData();/*  */
  System.sleep(config);
}

void getTemp(){
  float _temp = temp_sensor.getTemperature();
   fahrenheit = temp_sensor.convertToFahrenheit(_temp);
  Serial.println("Temperature measure" + String(fahrenheit));
}

// read data from soil sensor
void getSoil() {
  double val = analogRead(SOIL);  
   soilMoisturePercent = (100 * ( 1 - (double) (val - WaterValue) / (double) AirValue));
  Serial.println("Soil reading measuring" + String(soilMoisturePercent));
}

  // publish data in JSON format
 void publishData(){
   Serial.println("publishing");
   /*String data = String::format(
     "{ \"temperatureData\": %s,  \"moistureData\": %s}",
     fahrenheit, soilMoisturePercent);*/
     String str = String (fahrenheit) + String(soilMoisturePercent);
  Particle.publish("reading", str, PRIVATE);
  delay(20000);
} 
